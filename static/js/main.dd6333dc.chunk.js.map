{"version":3,"sources":["components/ErrorAlert.jsx","components/SearchIcon.jsx","components/Search.jsx","components/Header.jsx","components/LoadingIcon.jsx","components/UsersList.jsx","components/UsersPagination.jsx","utils/GithubApiUtils.js","App.jsx","serviceWorker.js","index.js"],"names":["ErrorAlert","children","className","SearchIcon","version","xmlns","x","y","width","height","viewBox","d","Search","props","useState","searchVal","setSearchVal","searchOrganization","error","limitsRespawnDate","Fragment","onSubmit","e","preventDefault","type","id","placeholder","value","onChange","target","required","Header","LoadingIcon","fill","offset","stopColor","fillOpacity","fillRule","attributeName","from","to","dur","repeatCount","UsersList","users","organization","length","map","login","activity","key","repo","date","UsersPagination","pagination","searchOrganizationUsers","orgName","prev","next","onClick","a","async","disabled","findOrganization","input","octokit","Octokit","search","q","response","data","totalCount","total_count","organizations","items","bestMatch","getOrganizationUsers","organizationName","page","orgs","listMembers","org","userArray","headers","link","links","parseLinks","user","getUserLastActivity","listEventsForUser","username","activityArray","Date","created_at","toLocaleString","name","checkLimits","rateLimit","get","limits","resources","coreLimits","core","searchLimits","remaining","reset","split","item","results","exec","pageNumber","label","filter","reduce","acc","cur","App","setUsers","setOrganizationName","setError","setLimitsRespawnDate","setPagination","handleError","console","orgUsers","forEach","index","prevState","newState","clearState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd6333dc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function ErrorAlert({ children }) {\r\n  return <div className=\"error-msg\">{children}</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SearchIcon() {\r\n  return (\r\n    <svg\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 30.239 30.239\"\r\n      className=\"icon\"\r\n    >\r\n      <path\r\n        d=\"M20.194,3.46c-4.613-4.613-12.121-4.613-16.734,0c-4.612,4.614-4.612,12.121,0,16.735\r\n          c4.108,4.107,10.506,4.547,15.116,1.34c0.097,0.459,0.319,0.897,0.676,1.254l6.718,6.718c0.979,0.977,2.561,0.977,3.535,0\r\n          c0.978-0.978,0.978-2.56,0-3.535l-6.718-6.72c-0.355-0.354-0.794-0.577-1.253-0.674C24.743,13.967,24.303,7.57,20.194,3.46z\r\n          M18.073,18.074c-3.444,3.444-9.049,3.444-12.492,0c-3.442-3.444-3.442-9.048,0-12.492c3.443-3.443,9.048-3.443,12.492,0\r\n          C21.517,9.026,21.517,14.63,18.073,18.074z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorAlert from './ErrorAlert';\r\nimport SearchIcon from './SearchIcon';\r\n\r\nexport default function Search(props) {\r\n  const [searchVal, setSearchVal] = useState('');\r\n\r\n  const { searchOrganization, error, limitsRespawnDate } = props;\r\n\r\n  const handleInput = e => {\r\n    setSearchVal(e.target.value);\r\n  };\r\n\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    searchOrganization(searchVal);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form className=\"search-form\" onSubmit={handleFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          id=\"search\"\r\n          className=\"search-input\"\r\n          placeholder=\"Find GitHub organization\"\r\n          value={searchVal}\r\n          onChange={handleInput}\r\n          required\r\n        />\r\n        <button className=\"search-button\" type=\"submit\">\r\n          <SearchIcon />\r\n        </button>\r\n      </form>\r\n      {error && (\r\n        <ErrorAlert>\r\n          You have exceded request limits. They will be renewed on{' '}\r\n          {limitsRespawnDate}\r\n        </ErrorAlert>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nSearch.propTypes = {\r\n  searchOrganization: PropTypes.func.isRequired,\r\n  error: PropTypes.bool.isRequired,\r\n  limitsRespawnDate: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Search from './Search';\r\n\r\nexport default function Header({\r\n  searchOrganization,\r\n  error,\r\n  limitsRespawnDate\r\n}) {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"title\">Don Gitto</h1>\r\n      <Search\r\n        searchOrganization={searchOrganization}\r\n        error={error}\r\n        limitsRespawnDate={limitsRespawnDate}\r\n      />\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  searchOrganization: PropTypes.func.isRequired,\r\n  error: PropTypes.bool.isRequired,\r\n  limitsRespawnDate: PropTypes.string\r\n};\r\n","import React from 'react';\r\n\r\nexport default function LoadingIcon() {\r\n  return (\r\n    <svg\r\n      className=\"loading-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.0\"\r\n      viewBox=\"0 0 128 128\"\r\n    >\r\n      <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#FFFFFF\" />\r\n      <g>\r\n        <linearGradient id=\"linear-gradient\">\r\n          <stop offset=\"0%\" stopColor=\"#ffffff\" fillOpacity=\"0\" />\r\n          <stop offset=\"100%\" stopColor=\"#242488\" fillOpacity=\"1\" />\r\n        </linearGradient>\r\n        <path\r\n          d=\"M63.85 0A63.85 63.85 0 1 1 0 63.85 63.85 63.85 0 0 1 63.85 0zm.65 19.5a44 44 0 1 1-44 44 44 44 0 0 1 44-44z\"\r\n          fill=\"url(#linear-gradient)\"\r\n          fillRule=\"evenodd\"\r\n        />\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          type=\"rotate\"\r\n          from=\"0 64 64\"\r\n          to=\"360 64 64\"\r\n          dur=\"1080ms\"\r\n          repeatCount=\"indefinite\"\r\n        ></animateTransform>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LoadingIcon from './LoadingIcon';\r\n\r\nexport default function UsersList({ users, organization }) {\r\n  return (\r\n    <React.Fragment>\r\n      {!!users.length && <h3>User list</h3>}\r\n      {!!organization && !users.length && (\r\n        <h3>The organization has no users</h3>\r\n      )}\r\n      <ul className=\"user-list\">\r\n        {users.map(({ id, login, activity }) => (\r\n          <li className=\"user\" key={id}>\r\n            <span className=\"user-login\">{login}</span>\r\n            <div className=\"user-activity\">\r\n              {activity && <span>activity: {activity.type}</span>}\r\n              {activity && <span>repository: {activity.repo}</span>}\r\n              {activity && <span>date: {activity.date}</span>}\r\n              {activity === null && <span>User has no public activity</span>}\r\n              {!activity && activity !== null && <LoadingIcon />}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nUsersList.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  organization: PropTypes.string\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function UsersPagination({\n  pagination,\n  searchOrganizationUsers,\n  orgName,\n  error\n}) {\n  const { prev, next } = pagination;\n  const handlePrevClick = async () => {\n    searchOrganizationUsers(orgName, prev);\n    // load previous page of users\n  };\n\n  const handleNextClick = async () => {\n    searchOrganizationUsers(orgName, next);\n    // load next page of users\n  };\n\n  return (\n    <div>\n      {prev && (\n        <button\n          className=\"pagination-btn\"\n          onClick={handlePrevClick}\n          disabled={error}\n        >\n          Previous page\n        </button>\n      )}\n      {next && (\n        <button\n          className=\"pagination-btn\"\n          onClick={handleNextClick}\n          disabled={error}\n        >\n          Next page\n        </button>\n      )}\n    </div>\n  );\n}\n\nUsersPagination.propTypes = {\n  pagination: PropTypes.object.isRequired,\n  searchOrganizationUsers: PropTypes.func.isRequired,\n  orgName: PropTypes.string,\n  error: PropTypes.bool\n};\n","import Octokit from '@octokit/rest';\n\nexport const findOrganization = async input => {\n  const octokit = new Octokit();\n  const response = await octokit.search.users({\n    q: `${input}+type:org`\n  });\n  const { total_count: totalCount, items: organizations } = response.data;\n\n  if (totalCount === 0) return null;\n\n  const bestMatch = organizations[0].login;\n  return bestMatch;\n};\n\nexport const getOrganizationUsers = async (organizationName, page) => {\n  const octokit = new Octokit();\n  const response = await octokit.orgs.listMembers({\n    org: organizationName,\n    page: page\n  });\n\n  const { data: userArray, headers } = response;\n  const { link } = headers;\n\n  const links = link ? parseLinks(link) : null;\n\n  const users = userArray.map(user => ({\n    id: user.id,\n    login: user.login\n  }));\n\n  return { users, links };\n};\n\nexport const getUserLastActivity = async user => {\n  const octokit = new Octokit();\n  const response = await octokit.activity.listEventsForUser({\n    username: user\n  });\n\n  const { data: activityArray } = response;\n  const [activity] = activityArray;\n  if (!activity) return null;\n\n  const date = new Date(activity.created_at).toLocaleString();\n\n  return {\n    type: activity.type,\n    repo: activity.repo.name,\n    date: date\n  };\n};\n\nexport const checkLimits = async () => {\n  const octokit = new Octokit();\n  const limits = await octokit.rateLimit.get();\n  const { core: coreLimits, search: searchLimits } = limits.data.resources;\n\n  if (coreLimits.remaining === 0) {\n    return new Date(coreLimits.reset * 1000);\n  }\n  if (searchLimits.remaining === 0) {\n    return new Date(searchLimits.reset * 1000);\n  }\n\n  return null;\n};\n\nconst parseLinks = link => {\n  const linkArr = link.split(',');\n  const links = linkArr.map(item => {\n    const regex = /^(.*)\\?page=(\\d+)>; rel=\"(.*)\"\\s*$/gm;\n    const results = regex.exec(item);\n\n    if (results === null) return { pageNumber: '', label: '' };\n\n    const [, , pageNumber, label] = results;\n    return {\n      pageNumber,\n      label\n    };\n  });\n\n  // For now we only want to show prev and next buttons\n  const prevNextLinks = links.filter(\n    item => item.label === 'prev' || item.label === 'next'\n  );\n\n  const finalLinks = prevNextLinks.reduce((acc, cur) => {\n    acc[cur.label] = cur.pageNumber;\n    return acc;\n  }, {});\n  return finalLinks;\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport UsersList from './components/UsersList';\nimport UsersPagination from './components/UsersPagination';\nimport {\n  findOrganization,\n  getOrganizationUsers,\n  getUserLastActivity,\n  checkLimits\n} from './utils/GithubApiUtils';\nimport ErrorAlert from './components/ErrorAlert';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [organizationName, setOrganizationName] = useState('');\n  const [error, setError] = useState(false);\n  const [limitsRespawnDate, setLimitsRespawnDate] = useState(null);\n  const [pagination, setPagination] = useState({\n    prev: null,\n    next: null\n  });\n\n  const searchOrganization = async input => {\n    try {\n      clearState();\n      const orgName = await findOrganization(input);\n\n      setOrganizationName(orgName);\n\n      if (orgName === null) return;\n\n      await searchOrganizationUsers(orgName);\n    } catch (error) {\n      handleError(error);\n    }\n  };\n\n  const handleError = async error => {\n    try {\n      setError(true);\n      const limits = await checkLimits();\n      const date = limits === null ? null : limits.toLocaleString();\n      setLimitsRespawnDate(date);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const searchOrganizationUsers = async (orgName, page = 1) => {\n    try {\n      const { users: orgUsers, links } = await getOrganizationUsers(\n        orgName,\n        page\n      );\n\n      setUsers(orgUsers);\n      if (links !== null) setPagination(links);\n\n      orgUsers.forEach(async (user, index) => {\n        try {\n          const activity = await getUserLastActivity(user.login);\n\n          setUsers(prevState => {\n            const newState = [...prevState];\n            newState[index] = { ...newState[index], activity };\n            return newState;\n          });\n        } catch (error) {\n          handleError(error);\n        }\n      });\n    } catch (error) {\n      handleError(error);\n    }\n  };\n\n  const clearState = () => {\n    setError(false);\n    setPagination({ prev: null, next: null });\n    setUsers([]);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header\n        searchOrganization={searchOrganization}\n        error={error}\n        limitsRespawnDate={limitsRespawnDate}\n      />\n      {organizationName && (\n        <h2 className=\"organization\">Organization: {organizationName}</h2>\n      )}\n      {organizationName === null && (\n        <ErrorAlert>Couldn't find organization with this name.</ErrorAlert>\n      )}\n      <UsersList users={users} organization={organizationName} />\n      <UsersPagination\n        pagination={pagination}\n        orgName={organizationName}\n        searchOrganizationUsers={searchOrganizationUsers}\n        error={error}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-console */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}